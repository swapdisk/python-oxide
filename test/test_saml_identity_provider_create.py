# coding: utf-8

"""
    Oxide Region API

    API for interacting with the Oxide control plane

    The version of the OpenAPI document: 20240821.0
    Contact: api@oxide.computer
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from oxide.models.saml_identity_provider_create import SamlIdentityProviderCreate

class TestSamlIdentityProviderCreate(unittest.TestCase):
    """SamlIdentityProviderCreate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SamlIdentityProviderCreate:
        """Test SamlIdentityProviderCreate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SamlIdentityProviderCreate`
        """
        model = SamlIdentityProviderCreate()
        if include_optional:
            return SamlIdentityProviderCreate(
                acs_url = '',
                description = '',
                group_attribute_name = '',
                idp_entity_id = '',
                idp_metadata_source = None,
                name = ERROR_TO_EXAMPLE_VALUE,
                signing_keypair = oxide.models.der_encoded_key_pair.DerEncodedKeyPair(
                    private_key = '', 
                    public_cert = '', ),
                slo_url = '',
                sp_client_id = '',
                technical_contact_email = ''
            )
        else:
            return SamlIdentityProviderCreate(
                acs_url = '',
                description = '',
                idp_entity_id = '',
                idp_metadata_source = None,
                name = ERROR_TO_EXAMPLE_VALUE,
                slo_url = '',
                sp_client_id = '',
                technical_contact_email = '',
        )
        """

    def testSamlIdentityProviderCreate(self):
        """Test SamlIdentityProviderCreate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
