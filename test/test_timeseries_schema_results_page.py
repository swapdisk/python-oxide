# coding: utf-8

"""
    Oxide Region API

    API for interacting with the Oxide control plane

    The version of the OpenAPI document: 20240821.0
    Contact: api@oxide.computer
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from oxide.models.timeseries_schema_results_page import TimeseriesSchemaResultsPage

class TestTimeseriesSchemaResultsPage(unittest.TestCase):
    """TimeseriesSchemaResultsPage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TimeseriesSchemaResultsPage:
        """Test TimeseriesSchemaResultsPage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TimeseriesSchemaResultsPage`
        """
        model = TimeseriesSchemaResultsPage()
        if include_optional:
            return TimeseriesSchemaResultsPage(
                items = [
                    oxide.models.timeseries_schema.TimeseriesSchema(
                        authz_scope = null, 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        datum_type = 'bool', 
                        description = oxide.models.timeseries_description.TimeseriesDescription(
                            metric = '', 
                            target = '', ), 
                        field_schema = [
                            oxide.models.field_schema.FieldSchema(
                                description = '', 
                                field_type = 'string', 
                                name = '', 
                                source = 'target', )
                            ], 
                        timeseries_name = 'e6zgckec0l3o4gi7xhk0jcy075ua034pgmug8iq37llr1plnjktgos9hdvpwi4jdixd_ml6jaj4swhsa064e9ybn07an7dc0zj1z3o_3g_g9i6qsiyk0_9c8fvw06p7a54pxfjl9qsi30bx456v_1d30994wetshbws0p64c4bfiki6yd4mr9nwr1as4j3pfv8kcs_4s7m7nnl4lz25sh3v1r9goy8pxfv2ryzgt6aeydd7zuvbrt5w_caueooksju6otpoj5ifautvjjct5108mvhj5wimaijj5ar4ihaucunk5lbvuwh2p5be_pr8swoqa9woex6dzpdztprol4oxf1vlovr8vywu4jqkr6ra0y0uv60djw970jt9h_uo5bs93ajxhzwa2z47zs3p378bgcyme5828j7l6igyo1l0q6ct94n9yu4ivrxn2_4gibpahdtf_3e57lhwd58_nqiyhhil1f8etzy51e5k658pq6zsvrzx3d2hzptzd1mew2jaa0t1ws_zuqa17fq0e006zbnf7ky56ke835tqzvhwsl6cx5bfv7f1ykfidg_cllqh9bh04mnc8360eg2lqm8q8z_jvpcukecm7gtpx6uypgs0csxv80zla1ucgbxqire6yq8vfz9vn4em09ihhroay_diluxbhqr3p2g1b3h3njw9yk4i4arqdwes12gq8i3y_83rb14hh00ift0zpojjsph0tqxs7w3atw99duoi0tknlj4052t3xobvho6qy2iwy64_v0hugc5yp6mxohh16xrscqda8kgk4uqu6a1kjv7e4qy5tfrididp6xyq3_5te74pvly5akq2ccqc99nscwdfc9nlut64g3e4587h4gt1bgo83bcouxg5yf679om5f84bz4l_qnmsb1f7cpjb64xcrx4x_3xf38t2b0agzlbsmbkt3rkgmypobk59nqk7zxnm8d0ncqlqevpg10uf1i2gvjh9e8ptfwch1d_h8mjcl4se6i7guhqpjckfdhbcol81gj121x3spm5zc45n36k3eqdd9yjdqs1pkccezqb_cu2de1dtj5h9xwpewy7k8lhpp63kbb0b1b16ayv4ij0w38grblikzgx1u1b5luh3bqti0samr3_g90paagwei_hdx02gck0z8ymzd98eol00uxqtpqpaavx61j6y4u7xzv17_ybocei9jwtad46vu4h6ubj3ayfw4qh2zfo0f66njbzrs9m_nis3wvbjm1ssur2h4om2x8g5rb7f7mqz5nb8zfohjjqtj0d0397j6sg460ruzas1z5ipr0l2aconeksz4dda22vc59h1m5y_dhwq4tali336n0mh5mtutv4k80y6mcjm87vcyjkvoqnja2o3vmnlrzv5uwaj5u4yrblhplugjo0tvpcsh3664thurk_71nkuv9zv1scf44hwmeoeo_4mhhl9kmiqwgr5gl5d7zn9an403c7b3rzrcvrgpkug0lp59qibt2laeybl28q74so3egjbpn_t3s3v3yrt06k5nfrrjdnzz4itf023dj393zvm5nh08uwvy37vz7lntsnhji7g8_4pbmor0vdqmangvepzg3oqlz13f6minqnk2ormbwuh43nbp47tf856g3lnld84xthea5ir3rewrx3_4xy0ovfwe33x76z3r16nmuohngzec2se9s_kbf6b2que3piesq27mi5hg7nq1h1lcbi1lkydpmkkerem5jse9q2it8et7r6vc148g3c7ix3x53dfdepd5dytvv_0nafom9uc9n_8tl4weepoth5f1jx6xo94nqdzxoh09lnt8kjy37didhcjhd3g4bcw1tal57kiyo9_cvrl6zyhwbyr5mpkob74ky1moopte4s602ty1lq9mx6vlj6u82i8r6f_j0m2z6wq9tiqr9g1godh97m98iswwfi7tn0z311qyk7w3g8lys76lnam9czkttxvw5j9w20xsabkvlrbnx_3ddgd3051sykqga71wscg658q6ok5revf94f9ljzlk90se93a1vhr_0g67uzogxuu11oz8rc6lnj99wok1kkho2td4jdvf8r8_6d7zctbuykoi9q7be3z5cz_khobupf92jxc70_gp2kqp2h37mx51zwk7uishqxl6vozz64e9ylqtlctszb27du5xaj94drh22a80u0za2eeqrwg4i7vn7m0mwpzhsn0mh4_pz9d8r7jdgqzqqfk61c5m029vs2_vjxujbhfro_wyg7kermssr8wlz1p41z27wqc10hlztyrcniq0ahgot5yfojxs7szzdlb0zprk3cx0l96fe2fz2wmcwvloejyoq8gocpt_t3lpq2mdr4mogxzcatr3t5wg1mycnozhgto42b8pyvl4xojzaps_amu18wyw8zm5v0608wqjngg2fd1phbf5n2nlntkdn6dizveuevujwayzorui28mvewnq5xsn8xb07ftdm6np3h8y1n0qurq_phmem49tj3qkz7jqpa9182x8eplhwh7qxtgzfbsgfeaswz3c0b_827vsgh0oohke7s6s3gor6shpxnuwltlo1_n3sag57na7tyykfyuey_d364gqpbz6q3c55i0pljcakamx2emf0vo7spohgmqmww8t23x90tfmbd5y020zplgz7mfx1imw4_4z31cbe23k43zim9nx7yopdndbi3v1h33sn6esbx_j6wcjfbvf7j8v9l1r69tv35q8089x6n90sntwohathk46o708c3tnzbdi85j8nafq8x0pkqmw9k9bwpqz_i5u4bvn1rbrbchnsijuvu4jqcx8x8e3mmfer1di1uhkl4cnqyx7apff65i3l3lch3igfv3sdwudh7gf8pmwscgo8c7z7ej0:clw3ow9b4kko83nm25aenlj0cropn09jfb3gqr5g9rlr5ijy1anfv2gk1tmhajpmq4v3u0l3k9pwn0chnjn0tg43rv5hf3r5l_mv4cwlprs5qyjd87j5_pa4v3tcgpy6z0nvqoywp0ug40nm12jiig560byubyng2da23ze1w32494nii19t6tzs62fkfqhven1x6_4sm4wkq555bzbeysmqs6ckp0g7l2mgoucuu855am5rs9s4fhccw3xvp1882igbte1u2eszywhx2ewg0z_ex4ngua1zo17xot9khril1kz17mfq6g7tfxxdw9uy1w0v6km4f95gskx1se2to7p3mbf7srgvsde5an96kvn0yt_8lh4e3feqepupm8395_hmsutegzz0gn723nmoih75zj819w_k87yflkc1vta9qalfw9uha20k52roann89grgpjk15hqnqu9fuqeyn0tzwp35494i87nc3u20mc9lr2krbvdms0x3wt_tkp_8hjjgsget22z438yh4f0fdip6h9ushdx43sxznz3olq_si7nbqnaybiti7m75c7o5trbm953i38kgyi6086vzmf9amrf1gh_zcvkppng9984t8mc4pgnd574m7ggci9u2lox4oh731c3u2gdzb_fpw98isqd6l0j7krk2qbsb0prow2lecnp29s32useq2aa4p808qpq46x2nd9k4y_cxt6unxmws1ver01lhoj6547ovi91co8t6jlowqh6ahn27x9kmh1snssffay5gxnicsur0z10ea2r_xlsndzgvfz5gar4nr2q9ftph5s2wtsxqm7h3vs2qqod15yehx_x2hmbftth_ygzhln3cnah67krboi6r32s21dx4t14twgm5mfrn63y54e42q6tf17enpyyh7ack0irf2aovogdi7fz247ffz7r2l1ovh0_pp8vavd6aw6q_2qcyiaoygfbiq5xhx17pcspijy_0zfwf3swqvx0oeq38rgi3povkcz0j49fvgg_6sgeg3lmx4lmo58m57aod61bpgh15wpnw8myubyble3g1szvfi9o91q74h2g7mxjki381fov5k4msjfztppt7ye81h_10z2kqkml4qnyf6dup3hjs2on9w9tr2srd2f865b0wpzf_tlbvnx7ychwt030hmym2s7dgwf9lf77abx_n8v6lndmrd7zl0h7qxoocrucawh6e105p93asaacc0njbrp8moktrty6kyr8xz270idhffky4hd3lhns9tw7wit_barhcxkc1xt0fp2hrna5spq4951r72fk6rb_lg2s7j2ry8k8k27rlm2u88564xnti2geeq2g43u5603roriavyst6xdlbylc32inaweze_v3ipqfym0eag89819fsfe9k1dvtq2ydnfdintnvit7iska6fw7oj1gar16nd5fe843y2pzv4pgrqe54j_o52nuglavcbn49lfpuy9zdj7m26y9lvcfdxrao3wf_uh8eb4qybikyo1dhwbqigvojal_o8uu5468kqb7bxndayi1i0l1nx3uv66xkoqfb3njg5w0g012wqd202p5nbuue_d0p8moh17x_93hk8n7qj7nfueu7xhpafv_vkv3y0yep54apa1lt2px7sptm5kchknsq7alfytvxli2jkkn0edwo05ot3baa52qpd_aitbycu3eof3u5ocofmed046uk_qa1s9550wy8od6prmo4ce4i6x_unhb6iy4xtewaqlg2qxt79yzb1bprg5rxt0m5_f57f8d39m2xt8pd7nisv7jx12cuubnu4vcgfu5j8e7ecss3ikern_6wfpy4ddxqz69v427vjpfpgevlztpu9zilfy6t3o67y3omo3h11zjqhmq3w6lj88ymqke2vasrn66i74trs1i8pf0qfsme_fzl23smhc8580iayn8n7jc7bvvcybuobxtogsoqjfytjowb4ymr2k1lt15jz1b5b7k9164m6x1kiq5dueii98u_nobegtslsjrzbtet4b2wrfjvkjmcov2026k1j4ezb2vn8itgddxjcq0zt98h3_9fadq4fwcwv8wja0iz1quc8o8el4heax0fejvcz1x4d1y5vkjlu0lzuk13x8t29v1l7e_rtukukd1jp123bqd8gfx8tljk4wngcrx7gzmjt7cvijzpufon_0rhwecar1n9x6yrccpab144dbga7p7cdjw8fxgn7p3fwv6fw28_zt5ehcnjzm1kbdbj9wrcmomki6yz6d0td5fewjfo63h6d1k2z1dzlrse2ii3t4n1c31qd_ogjt_iiwrzsuhm4dtxdpmcpzzros5wshfcaaxo6h5gxoszor6fyx14yj4gzk_7c8f4c3qo1khx5nu4zs69u0o9gno3uzemnsofp0lurenktbv8u_66swbanntpb9z8o6va0gtncubilgrvmd40662zv0ii_u62zxzgihv9k56ucu1utwess31s85jpqup581kmmarirev26dqjovze3p7yendnglh6j7m0_alppt27so604ps9jdpndp7c7yp8kuemevp6mvotyt4c3i0yvabht0t_kvjyvjefifuqebknfaejn7v8f2dzinoai2d6gd5owzlvmuemr_a5mslw0g3hcymiyko43dg8hjiz4falvgxmiv3a6w8rsu56_a86smxx0jl95u5ansnain_u0hdxoqtoi6xifwv42f94h8euutruh5wbzseo16o0nxqesoqcnvonl8h4lvf5xnriu6vv03ggxvhogd3verofb3f2zyt_l1eyqdb5754643crpoxenn9xc0ithae8ld44yenw7b9253vncoss7yt6pvhs2ax4oi50r1b8516mkec0ax066euosppxnck30heh_6vnnr_s4397po60rpu9zdopkedi8sewupvinqw_m_zeqw5dv4ekkkhfnul747x_12u63m2k9nenuadyhf59dp8ljywok4rscchehhn5it6lv9bvmb2tgxxgmr_gk2x8fdolb22aom6om92056ce3bl7kpy3s2u5rn7a7iw9ob48g7e07lges3vri_dicuapgs5u8z7f1umakabzvbmop2ncosv34ay_pej6x5mcorwwlvuriais1zid1tzwslkkme9_4zprg4s8d1uybpzyje7zazb4sjzp0ojzkdhpms41et3wvvu6d46meep2slgbv890cnkdtiefepqvp6fw_xkd252xkyxuaiyt2m5wyssaco512gudyvnd5imecmpom67i1mdq10u2jnf2um2gx91ugrtm_msjm84oh26zt0iwtghjg81xbcur256exhi37z9_ey_uvme6pvdkor54n6wd88m4pkw1stxj8zc8uvfyfvy1gt7_vu90t4peyuple02dbchkmbp3eo0p12i0md83y1zfy8mj9m6qf1jf820lsvzl9wwiweef63_s6c1yc9958z91co7_of894yf1dyeg2er3bp_vbal7adsl_1rt2cush0srhok9qy9lbxym3h8lpsu9c8sfij5jphv7so8z926z0482o2gop3pacv2l4ci_zq', 
                        units = null, 
                        version = 1, )
                    ],
                next_page = ''
            )
        else:
            return TimeseriesSchemaResultsPage(
                items = [
                    oxide.models.timeseries_schema.TimeseriesSchema(
                        authz_scope = null, 
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        datum_type = 'bool', 
                        description = oxide.models.timeseries_description.TimeseriesDescription(
                            metric = '', 
                            target = '', ), 
                        field_schema = [
                            oxide.models.field_schema.FieldSchema(
                                description = '', 
                                field_type = 'string', 
                                name = '', 
                                source = 'target', )
                            ], 
                        timeseries_name = 'e6zgckec0l3o4gi7xhk0jcy075ua034pgmug8iq37llr1plnjktgos9hdvpwi4jdixd_ml6jaj4swhsa064e9ybn07an7dc0zj1z3o_3g_g9i6qsiyk0_9c8fvw06p7a54pxfjl9qsi30bx456v_1d30994wetshbws0p64c4bfiki6yd4mr9nwr1as4j3pfv8kcs_4s7m7nnl4lz25sh3v1r9goy8pxfv2ryzgt6aeydd7zuvbrt5w_caueooksju6otpoj5ifautvjjct5108mvhj5wimaijj5ar4ihaucunk5lbvuwh2p5be_pr8swoqa9woex6dzpdztprol4oxf1vlovr8vywu4jqkr6ra0y0uv60djw970jt9h_uo5bs93ajxhzwa2z47zs3p378bgcyme5828j7l6igyo1l0q6ct94n9yu4ivrxn2_4gibpahdtf_3e57lhwd58_nqiyhhil1f8etzy51e5k658pq6zsvrzx3d2hzptzd1mew2jaa0t1ws_zuqa17fq0e006zbnf7ky56ke835tqzvhwsl6cx5bfv7f1ykfidg_cllqh9bh04mnc8360eg2lqm8q8z_jvpcukecm7gtpx6uypgs0csxv80zla1ucgbxqire6yq8vfz9vn4em09ihhroay_diluxbhqr3p2g1b3h3njw9yk4i4arqdwes12gq8i3y_83rb14hh00ift0zpojjsph0tqxs7w3atw99duoi0tknlj4052t3xobvho6qy2iwy64_v0hugc5yp6mxohh16xrscqda8kgk4uqu6a1kjv7e4qy5tfrididp6xyq3_5te74pvly5akq2ccqc99nscwdfc9nlut64g3e4587h4gt1bgo83bcouxg5yf679om5f84bz4l_qnmsb1f7cpjb64xcrx4x_3xf38t2b0agzlbsmbkt3rkgmypobk59nqk7zxnm8d0ncqlqevpg10uf1i2gvjh9e8ptfwch1d_h8mjcl4se6i7guhqpjckfdhbcol81gj121x3spm5zc45n36k3eqdd9yjdqs1pkccezqb_cu2de1dtj5h9xwpewy7k8lhpp63kbb0b1b16ayv4ij0w38grblikzgx1u1b5luh3bqti0samr3_g90paagwei_hdx02gck0z8ymzd98eol00uxqtpqpaavx61j6y4u7xzv17_ybocei9jwtad46vu4h6ubj3ayfw4qh2zfo0f66njbzrs9m_nis3wvbjm1ssur2h4om2x8g5rb7f7mqz5nb8zfohjjqtj0d0397j6sg460ruzas1z5ipr0l2aconeksz4dda22vc59h1m5y_dhwq4tali336n0mh5mtutv4k80y6mcjm87vcyjkvoqnja2o3vmnlrzv5uwaj5u4yrblhplugjo0tvpcsh3664thurk_71nkuv9zv1scf44hwmeoeo_4mhhl9kmiqwgr5gl5d7zn9an403c7b3rzrcvrgpkug0lp59qibt2laeybl28q74so3egjbpn_t3s3v3yrt06k5nfrrjdnzz4itf023dj393zvm5nh08uwvy37vz7lntsnhji7g8_4pbmor0vdqmangvepzg3oqlz13f6minqnk2ormbwuh43nbp47tf856g3lnld84xthea5ir3rewrx3_4xy0ovfwe33x76z3r16nmuohngzec2se9s_kbf6b2que3piesq27mi5hg7nq1h1lcbi1lkydpmkkerem5jse9q2it8et7r6vc148g3c7ix3x53dfdepd5dytvv_0nafom9uc9n_8tl4weepoth5f1jx6xo94nqdzxoh09lnt8kjy37didhcjhd3g4bcw1tal57kiyo9_cvrl6zyhwbyr5mpkob74ky1moopte4s602ty1lq9mx6vlj6u82i8r6f_j0m2z6wq9tiqr9g1godh97m98iswwfi7tn0z311qyk7w3g8lys76lnam9czkttxvw5j9w20xsabkvlrbnx_3ddgd3051sykqga71wscg658q6ok5revf94f9ljzlk90se93a1vhr_0g67uzogxuu11oz8rc6lnj99wok1kkho2td4jdvf8r8_6d7zctbuykoi9q7be3z5cz_khobupf92jxc70_gp2kqp2h37mx51zwk7uishqxl6vozz64e9ylqtlctszb27du5xaj94drh22a80u0za2eeqrwg4i7vn7m0mwpzhsn0mh4_pz9d8r7jdgqzqqfk61c5m029vs2_vjxujbhfro_wyg7kermssr8wlz1p41z27wqc10hlztyrcniq0ahgot5yfojxs7szzdlb0zprk3cx0l96fe2fz2wmcwvloejyoq8gocpt_t3lpq2mdr4mogxzcatr3t5wg1mycnozhgto42b8pyvl4xojzaps_amu18wyw8zm5v0608wqjngg2fd1phbf5n2nlntkdn6dizveuevujwayzorui28mvewnq5xsn8xb07ftdm6np3h8y1n0qurq_phmem49tj3qkz7jqpa9182x8eplhwh7qxtgzfbsgfeaswz3c0b_827vsgh0oohke7s6s3gor6shpxnuwltlo1_n3sag57na7tyykfyuey_d364gqpbz6q3c55i0pljcakamx2emf0vo7spohgmqmww8t23x90tfmbd5y020zplgz7mfx1imw4_4z31cbe23k43zim9nx7yopdndbi3v1h33sn6esbx_j6wcjfbvf7j8v9l1r69tv35q8089x6n90sntwohathk46o708c3tnzbdi85j8nafq8x0pkqmw9k9bwpqz_i5u4bvn1rbrbchnsijuvu4jqcx8x8e3mmfer1di1uhkl4cnqyx7apff65i3l3lch3igfv3sdwudh7gf8pmwscgo8c7z7ej0:clw3ow9b4kko83nm25aenlj0cropn09jfb3gqr5g9rlr5ijy1anfv2gk1tmhajpmq4v3u0l3k9pwn0chnjn0tg43rv5hf3r5l_mv4cwlprs5qyjd87j5_pa4v3tcgpy6z0nvqoywp0ug40nm12jiig560byubyng2da23ze1w32494nii19t6tzs62fkfqhven1x6_4sm4wkq555bzbeysmqs6ckp0g7l2mgoucuu855am5rs9s4fhccw3xvp1882igbte1u2eszywhx2ewg0z_ex4ngua1zo17xot9khril1kz17mfq6g7tfxxdw9uy1w0v6km4f95gskx1se2to7p3mbf7srgvsde5an96kvn0yt_8lh4e3feqepupm8395_hmsutegzz0gn723nmoih75zj819w_k87yflkc1vta9qalfw9uha20k52roann89grgpjk15hqnqu9fuqeyn0tzwp35494i87nc3u20mc9lr2krbvdms0x3wt_tkp_8hjjgsget22z438yh4f0fdip6h9ushdx43sxznz3olq_si7nbqnaybiti7m75c7o5trbm953i38kgyi6086vzmf9amrf1gh_zcvkppng9984t8mc4pgnd574m7ggci9u2lox4oh731c3u2gdzb_fpw98isqd6l0j7krk2qbsb0prow2lecnp29s32useq2aa4p808qpq46x2nd9k4y_cxt6unxmws1ver01lhoj6547ovi91co8t6jlowqh6ahn27x9kmh1snssffay5gxnicsur0z10ea2r_xlsndzgvfz5gar4nr2q9ftph5s2wtsxqm7h3vs2qqod15yehx_x2hmbftth_ygzhln3cnah67krboi6r32s21dx4t14twgm5mfrn63y54e42q6tf17enpyyh7ack0irf2aovogdi7fz247ffz7r2l1ovh0_pp8vavd6aw6q_2qcyiaoygfbiq5xhx17pcspijy_0zfwf3swqvx0oeq38rgi3povkcz0j49fvgg_6sgeg3lmx4lmo58m57aod61bpgh15wpnw8myubyble3g1szvfi9o91q74h2g7mxjki381fov5k4msjfztppt7ye81h_10z2kqkml4qnyf6dup3hjs2on9w9tr2srd2f865b0wpzf_tlbvnx7ychwt030hmym2s7dgwf9lf77abx_n8v6lndmrd7zl0h7qxoocrucawh6e105p93asaacc0njbrp8moktrty6kyr8xz270idhffky4hd3lhns9tw7wit_barhcxkc1xt0fp2hrna5spq4951r72fk6rb_lg2s7j2ry8k8k27rlm2u88564xnti2geeq2g43u5603roriavyst6xdlbylc32inaweze_v3ipqfym0eag89819fsfe9k1dvtq2ydnfdintnvit7iska6fw7oj1gar16nd5fe843y2pzv4pgrqe54j_o52nuglavcbn49lfpuy9zdj7m26y9lvcfdxrao3wf_uh8eb4qybikyo1dhwbqigvojal_o8uu5468kqb7bxndayi1i0l1nx3uv66xkoqfb3njg5w0g012wqd202p5nbuue_d0p8moh17x_93hk8n7qj7nfueu7xhpafv_vkv3y0yep54apa1lt2px7sptm5kchknsq7alfytvxli2jkkn0edwo05ot3baa52qpd_aitbycu3eof3u5ocofmed046uk_qa1s9550wy8od6prmo4ce4i6x_unhb6iy4xtewaqlg2qxt79yzb1bprg5rxt0m5_f57f8d39m2xt8pd7nisv7jx12cuubnu4vcgfu5j8e7ecss3ikern_6wfpy4ddxqz69v427vjpfpgevlztpu9zilfy6t3o67y3omo3h11zjqhmq3w6lj88ymqke2vasrn66i74trs1i8pf0qfsme_fzl23smhc8580iayn8n7jc7bvvcybuobxtogsoqjfytjowb4ymr2k1lt15jz1b5b7k9164m6x1kiq5dueii98u_nobegtslsjrzbtet4b2wrfjvkjmcov2026k1j4ezb2vn8itgddxjcq0zt98h3_9fadq4fwcwv8wja0iz1quc8o8el4heax0fejvcz1x4d1y5vkjlu0lzuk13x8t29v1l7e_rtukukd1jp123bqd8gfx8tljk4wngcrx7gzmjt7cvijzpufon_0rhwecar1n9x6yrccpab144dbga7p7cdjw8fxgn7p3fwv6fw28_zt5ehcnjzm1kbdbj9wrcmomki6yz6d0td5fewjfo63h6d1k2z1dzlrse2ii3t4n1c31qd_ogjt_iiwrzsuhm4dtxdpmcpzzros5wshfcaaxo6h5gxoszor6fyx14yj4gzk_7c8f4c3qo1khx5nu4zs69u0o9gno3uzemnsofp0lurenktbv8u_66swbanntpb9z8o6va0gtncubilgrvmd40662zv0ii_u62zxzgihv9k56ucu1utwess31s85jpqup581kmmarirev26dqjovze3p7yendnglh6j7m0_alppt27so604ps9jdpndp7c7yp8kuemevp6mvotyt4c3i0yvabht0t_kvjyvjefifuqebknfaejn7v8f2dzinoai2d6gd5owzlvmuemr_a5mslw0g3hcymiyko43dg8hjiz4falvgxmiv3a6w8rsu56_a86smxx0jl95u5ansnain_u0hdxoqtoi6xifwv42f94h8euutruh5wbzseo16o0nxqesoqcnvonl8h4lvf5xnriu6vv03ggxvhogd3verofb3f2zyt_l1eyqdb5754643crpoxenn9xc0ithae8ld44yenw7b9253vncoss7yt6pvhs2ax4oi50r1b8516mkec0ax066euosppxnck30heh_6vnnr_s4397po60rpu9zdopkedi8sewupvinqw_m_zeqw5dv4ekkkhfnul747x_12u63m2k9nenuadyhf59dp8ljywok4rscchehhn5it6lv9bvmb2tgxxgmr_gk2x8fdolb22aom6om92056ce3bl7kpy3s2u5rn7a7iw9ob48g7e07lges3vri_dicuapgs5u8z7f1umakabzvbmop2ncosv34ay_pej6x5mcorwwlvuriais1zid1tzwslkkme9_4zprg4s8d1uybpzyje7zazb4sjzp0ojzkdhpms41et3wvvu6d46meep2slgbv890cnkdtiefepqvp6fw_xkd252xkyxuaiyt2m5wyssaco512gudyvnd5imecmpom67i1mdq10u2jnf2um2gx91ugrtm_msjm84oh26zt0iwtghjg81xbcur256exhi37z9_ey_uvme6pvdkor54n6wd88m4pkw1stxj8zc8uvfyfvy1gt7_vu90t4peyuple02dbchkmbp3eo0p12i0md83y1zfy8mj9m6qf1jf820lsvzl9wwiweef63_s6c1yc9958z91co7_of894yf1dyeg2er3bp_vbal7adsl_1rt2cush0srhok9qy9lbxym3h8lpsu9c8sfij5jphv7so8z926z0482o2gop3pacv2l4ci_zq', 
                        units = null, 
                        version = 1, )
                    ],
        )
        """

    def testTimeseriesSchemaResultsPage(self):
        """Test TimeseriesSchemaResultsPage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
