# coding: utf-8

"""
    Oxide Region API

    API for interacting with the Oxide control plane

    The version of the OpenAPI document: 20240821.0
    Contact: api@oxide.computer
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from oxide.models.switch_port_settings_view import SwitchPortSettingsView

class TestSwitchPortSettingsView(unittest.TestCase):
    """SwitchPortSettingsView unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SwitchPortSettingsView:
        """Test SwitchPortSettingsView
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SwitchPortSettingsView`
        """
        model = SwitchPortSettingsView()
        if include_optional:
            return SwitchPortSettingsView(
                addresses = [
                    oxide.models.switch_port_address_config.SwitchPortAddressConfig(
                        address = null, 
                        address_lot_block_id = '', 
                        interface_name = '', 
                        port_settings_id = '', 
                        vlan_id = 0, )
                    ],
                bgp_peers = [
                    oxide.models.bgp_peer.BgpPeer(
                        addr = '', 
                        allowed_export = null, 
                        allowed_import = null, 
                        bgp_config = null, 
                        communities = [
                            0
                            ], 
                        connect_retry = 0, 
                        delay_open = 0, 
                        enforce_first_as = True, 
                        hold_time = 0, 
                        idle_hold_time = 0, 
                        interface_name = '', 
                        keepalive = 0, 
                        local_pref = 0, 
                        md5_auth_key = '', 
                        min_ttl = 0, 
                        multi_exit_discriminator = 0, 
                        remote_asn = 0, 
                        vlan_id = 0, )
                    ],
                groups = [
                    oxide.models.switch_port_settings_groups.SwitchPortSettingsGroups(
                        port_settings_group_id = '', 
                        port_settings_id = '', )
                    ],
                interfaces = [
                    oxide.models.switch_interface_config.SwitchInterfaceConfig(
                        id = '', 
                        interface_name = '', 
                        kind = null, 
                        port_settings_id = '', 
                        v6_enabled = True, )
                    ],
                link_lldp = [
                    oxide.models.lldp_link_config.LldpLinkConfig(
                        chassis_id = '', 
                        enabled = True, 
                        id = '', 
                        link_description = '', 
                        link_name = '', 
                        management_ip = null, 
                        system_description = '', 
                        system_name = '', )
                    ],
                links = [
                    oxide.models.switch_port_link_config.SwitchPortLinkConfig(
                        autoneg = True, 
                        fec = null, 
                        link_name = '', 
                        lldp_link_config_id = '', 
                        mtu = 0, 
                        port_settings_id = '', 
                        speed = null, )
                    ],
                port = oxide.models.switch_port_config.SwitchPortConfig(
                    geometry = null, 
                    port_settings_id = '', ),
                routes = [
                    oxide.models.switch_port_route_config.SwitchPortRouteConfig(
                        dst = null, 
                        gw = null, 
                        interface_name = '', 
                        local_pref = 0, 
                        port_settings_id = '', 
                        vlan_id = 0, )
                    ],
                settings = oxide.models.switch_port_settings.SwitchPortSettings(
                    description = '', 
                    id = '', 
                    name = null, 
                    time_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    time_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                vlan_interfaces = [
                    oxide.models.switch_vlan_interface_config.SwitchVlanInterfaceConfig(
                        interface_config_id = '', 
                        vlan_id = 0, )
                    ]
            )
        else:
            return SwitchPortSettingsView(
                addresses = [
                    oxide.models.switch_port_address_config.SwitchPortAddressConfig(
                        address = null, 
                        address_lot_block_id = '', 
                        interface_name = '', 
                        port_settings_id = '', 
                        vlan_id = 0, )
                    ],
                bgp_peers = [
                    oxide.models.bgp_peer.BgpPeer(
                        addr = '', 
                        allowed_export = null, 
                        allowed_import = null, 
                        bgp_config = null, 
                        communities = [
                            0
                            ], 
                        connect_retry = 0, 
                        delay_open = 0, 
                        enforce_first_as = True, 
                        hold_time = 0, 
                        idle_hold_time = 0, 
                        interface_name = '', 
                        keepalive = 0, 
                        local_pref = 0, 
                        md5_auth_key = '', 
                        min_ttl = 0, 
                        multi_exit_discriminator = 0, 
                        remote_asn = 0, 
                        vlan_id = 0, )
                    ],
                groups = [
                    oxide.models.switch_port_settings_groups.SwitchPortSettingsGroups(
                        port_settings_group_id = '', 
                        port_settings_id = '', )
                    ],
                interfaces = [
                    oxide.models.switch_interface_config.SwitchInterfaceConfig(
                        id = '', 
                        interface_name = '', 
                        kind = null, 
                        port_settings_id = '', 
                        v6_enabled = True, )
                    ],
                link_lldp = [
                    oxide.models.lldp_link_config.LldpLinkConfig(
                        chassis_id = '', 
                        enabled = True, 
                        id = '', 
                        link_description = '', 
                        link_name = '', 
                        management_ip = null, 
                        system_description = '', 
                        system_name = '', )
                    ],
                links = [
                    oxide.models.switch_port_link_config.SwitchPortLinkConfig(
                        autoneg = True, 
                        fec = null, 
                        link_name = '', 
                        lldp_link_config_id = '', 
                        mtu = 0, 
                        port_settings_id = '', 
                        speed = null, )
                    ],
                port = oxide.models.switch_port_config.SwitchPortConfig(
                    geometry = null, 
                    port_settings_id = '', ),
                routes = [
                    oxide.models.switch_port_route_config.SwitchPortRouteConfig(
                        dst = null, 
                        gw = null, 
                        interface_name = '', 
                        local_pref = 0, 
                        port_settings_id = '', 
                        vlan_id = 0, )
                    ],
                settings = oxide.models.switch_port_settings.SwitchPortSettings(
                    description = '', 
                    id = '', 
                    name = null, 
                    time_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    time_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                vlan_interfaces = [
                    oxide.models.switch_vlan_interface_config.SwitchVlanInterfaceConfig(
                        interface_config_id = '', 
                        vlan_id = 0, )
                    ],
        )
        """

    def testSwitchPortSettingsView(self):
        """Test SwitchPortSettingsView"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
